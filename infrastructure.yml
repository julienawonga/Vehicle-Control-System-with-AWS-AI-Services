AWSTemplateFormatVersion: "2010-09-09"
Resources:
  Queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: queue1234567

  EntryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: EntryTable
      AttributeDefinitions:
        - AttributeName: ImageName
          AttributeType: S
      KeySchema:
        - AttributeName: ImageName
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  VehicleTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: VehicleTable
      AttributeDefinitions:
        - AttributeName: VehicleID
          AttributeType: S
      KeySchema:
        - AttributeName: VehicleID
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  SQSTriggerLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: process-image-function
      Runtime: python3.8
      Handler: lambda_handler.lambda_handler
      Code:
        S3Bucket: zipstorefunctionszip
        S3Key: lambda_handler.zip
      Role: arn:aws:iam::[your-aws-account-id]:role/process-image-role

  DynamoDBTriggerLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: send-notification-function
      Runtime: python3.8
      Handler: lambda_handler.lambda_handler
      Code:
        S3Bucket: zipstorefunctionszip
        S3Key: lambda_handler2.zip
      Role: arn:aws:iam::[your-aws-account-id]:role/send-notification-role

  SQSEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      EventSourceArn: !GetAtt Queue.Arn
      FunctionName: !Ref SQSTriggerLambda

  DynamoDBEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 100
      EventSourceArn: !GetAtt EntryTable.StreamArn
      FunctionName: !Ref DynamoDBTriggerLambda
      StartingPosition: TRIM_HORIZON
